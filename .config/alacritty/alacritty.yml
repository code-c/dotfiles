# Configuration for Alacritty, the GPU enhanced terminal emulator.

import:
    # uncomment the flavour you want below:
    - ~/.config/alacritty/catppuccin/catppuccin-mocha.yml
    # - ~/.config/alacritty/catppuccin/catppuccin-macchiato.yml
    # - ~/.config/alacritty/catppuccin/catppuccin-frappe.yml
    # - ~/.config/alacritty/catppuccin/catppuccin-latte.yml

env:
  # TERM env costomization
  TERM: xterm-256color

window:
  # Window dimensions (changes require restart)
  dimensions:
   columns: 150
   lines: 45

  # Window position in pixels (changes require restart)
  #position:
  #  x: 0
  #  y: 0

  # Window padding
  padding:
    x: 4 
    y: 10

  # Spread additional padding evenly around the terminal content.
  #dynamic_padding: true

  # Window decorations
  # MacOS extraneous values for `decorations`: transparent, buttonless
  decorations: full
  opacity: 1.0
  startup_mode: Windowed

  # Allow terminal applications to change Alacritty's window title.
  dynamic_title: true

  # Decorations theme variant
  decorations_theme_variant: Dark

  resize_increments: true

  # Make `Option` key behave as `Alt` (macOS only):
  option_as_alt: Both


# Font configuration
font:
  # The normal (roman) font face to use.
  normal:
    family: Lekton Nerd Font Propo
    style: Regular

  # The bold font face
  bold:
    family: Lekton Nerd Font Propo
    style: Bold

  # The italic font face
  italic:
    family: Lekton Nerd Font Propo
    style: Italic

  # Bold italic font face
  #bold_italic:
    #family: monospace
    #style: Bold Italic

  # Point size
  size: 16.0

  # Offset is the extra space around each character. `offset.y` can be thought
  # of as modifying the line spacing, and `offset.x` as modifying the letter
  # spacing.
  offset:
   x: 0
   y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the
  # right, increasing `y` moves the glyph upward.
  glyph_offset:
   x: 0
   y: 0

  # Use built-in font for box drawing characters. If `true`, Alacritty will use a custom built-in font for box drawing
  # characters (Unicode points 2500 - 259f).
  #
  #builtin_box_drawing: true

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true


# # Color Scheme
# colors:
#   # Default colors
#   primary:
#     background: '0x1E1D2F'
#     foreground: '0xD9E0EE'

#   cursor:
#     text: '0x1E1D2F'
#     cursor: '0xF5E0DC'

#   # Normal colors
#   normal:
#     black: '0x6E6C7E'
#     red: '0xF28FAD'
#     green: '0xABE9B3'
#     yellow: '0xFAE3B0'
#     blue: '0x96CDFB'
#     magenta: '0xF5C2E7'
#     cyan: '0x89DCEB'
#     white: '0xD9E0EE'

#   # Bright colors
#   bright:
#     black: '0x988BA2'
#     red: '0xF28FAD'
#     green: '0xABE9B3'
#     yellow: '0xFAE3B0'
#     blue: '0x96CDFB'
#     magenta: '0xF5C2E7'
#     cyan: '0x89DCEB'
#     white: '0xD9E0EE'

#   indexed_colors:
#     - { index: 16, color: '0xF8BD96' }
#     - { index: 17, color: '0xF5E0DC' }

# Bell
#
# The bell is rung every time the BEL control character is received.
bell:
  animation: EaseOutExpo
  duration: 0

selection:
  # This string contains all characters that are used as separators for
  # "semantic words" in Alacritty.
  semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  #save_to_clipboard: false

cursor:
  # Cursor style
  style:
    shape: Beam
    blinking: On


# Live config reload (changes require restart)
live_config_reload: true
theme: Catppuccin

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g.
# `/bin/fish`. Entries in `shell.args` are passed unmodified as arguments to the
# shell.
#
shell:
  program: /bin/zsh
#  args:
#    - --login

# Hints
#
# Terminal hints can be used to find text or hyperlink in the visible part of
# the terminal and pipe it to other applications.
#hints:
  # Keys used for the hint labels.
  #alphabet: "jfkdls;ahgurieowpq"

  # List with all available hints
  #
  # Each hint must have any of `regex` or `hyperlinks` field and either an
  # `action` or a `command` field. The fields `mouse`, `binding` and
  # `post_processing` are optional.
  #
  # The `hyperlinks` option will cause OSC 8 escape sequence hyperlinks to be
  # highlighted.
  #
  # The fields `command`, `binding.key`, `binding.mods`, `binding.mode` and
  # `mouse.mods` accept the same values as they do in the `key_bindings` section.
  #
  # The `mouse.enabled` field controls if the hint should be underlined while
  # the mouse with all `mouse.mods` keys held or the vi mode cursor is above it.
  #
  # If the `post_processing` field is set to `true`, heuristics will be used to
  # shorten the match if there are characters likely not to be part of the hint
  # (e.g. a trailing `.`). This is most useful for URIs and applies only to
  # `regex` matches.
  #
  # Values for `action`:
  #   - Copy
  #       Copy the hint's text to the clipboard.
  #   - Paste
  #       Paste the hint's text to the terminal or search.
  #   - Select
  #       Select the hint's text.
  #   - MoveViModeCursor
  #       Move the vi mode cursor to the beginning of the hint.
  #enabled:
  # - regex: "(ipfs:|ipns:|magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)\
  #           [^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^⟨⟩`]+"
  #   hyperlinks: true
  #   command: xdg-open
  #   post_processing: true
  #   mouse:
  #     enabled: true
  #     mods: None
  #   binding:
  #     key: U
  #     mods: Control|Shift


# Key bindings
#
# just look up in the repo
#key_bindings:
  #- { key: Paste,                                       action: Paste          }
  #- { key: Copy,                                        action: Copy           }
  #- { key: L,         mods: Control,                    action: ClearLogNotice }
  #- { key: L,         mods: Control, mode: ~Vi|~Search, chars: "\x0c"          }
  #- { key: PageUp,    mods: Shift,   mode: ~Alt,        action: ScrollPageUp   }
  #- { key: PageDown,  mods: Shift,   mode: ~Alt,        action: ScrollPageDown }
  #- { key: Home,      mods: Shift,   mode: ~Alt,        action: ScrollToTop    }
  #- { key: End,       mods: Shift,   mode: ~Alt,        action: ScrollToBottom }

  
#debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - Off
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Renderer override.
  #   - glsl3
  #   - gles2
  #   - gles2_pure
  #renderer: None
